[project]
name = "kaggle-template"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12, <3.13"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "catboost>=1.2.7",
  "hydra-core>=1.3.2",
  "ipykernel>=6.29.5",
  "kaggle==1.6.1",
  "lightgbm>=4.5",
  "lightning>=2.3.3",
  "mypy>=1.11.2",
  "pandas>=2.2.2",
  "polars>=1.7.1",
  "pre-commit>=3.8",
  "pyarrow>=17",
  "pydantic>=2.7.4",
  "pytest>=8.3.3",
  "rich>=13.8.1",
  "ruff>=0.6.5",
  "scikit-learn>=1.5.2",
  "seaborn>=0.13.2",
  "torch==2.4.0+cu121",
  "torch-geometric>=2.6",
  "transformers>=4.44.2",
  "wandb>=0.18.1",
  "xgboost>=2.1.1",
]

[tool.hatch.build.targets.wheel]
packages = ["exp", "src"]

[tool.uv]
extra-index-url = ["https://download.pytorch.org/whl/cu121"]
index-strategy = "unsafe-best-match"

[tool.mypy]
python_version = "3.10"
plugins = ["pydantic.mypy", "numpy.typing.mypy_plugin"]
allow_redefinition = true
check_untyped_defs = true
allow_untyped_globals = false
color_output = true
disallow_untyped_decorators = false
disallow_untyped_defs = true
disallow_untyped_calls = false
error_summary = true
ignore_missing_imports = true
implicit_reexport = true
no_implicit_optional = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true
strict_equality = true
strict_optional = true
warn_unused_configs = true
warn_unreachable = true
warn_redundant_casts = true
warn_no_return = true
warn_return_any = true

[tool.ruff]
target-version = "py310"
line-length = 120
indent-width = 4
output-format = "grouped"

[tool.ruff.lint]
select = [
    "AIR",   # Airflow
    "ASYNC", # flake8-async
    "BLE",   # flake8-blind-except
    "C4",    # flake8-comprehensions
    "C90",   # mccabe
    "DTZ",   # flake8-datetimez
    "E",     # pycodestyle
    "F",     # Pyflakes
    "FA",    # flake8-future-annotations
    "FLY",   # flynt
    "I",     # isort
    "ICN",   # flake8-import-conventions
    "INT",   # flake8-gettext
    "NPY",   # NumPy-specific rules
    "PL",    # Pylint
    "PYI",   # flake8-pyi
    "RSE",   # flake8-raise
    "RUF",   # Ruff-specific rules
    "S",     # flake8-bandit
    "SLOT",  # flake8-slots
    "T10",   # flake8-debugger
    "TID",   # flake8-tidy-imports
    "TRY",   # tryceratops
    "UP",    # pyupgrade
    "W",     # pycodestyle
    "YTT",   # flake8-2020
]
ignore = [
    "S101",   # allow assertion
    "TRY003", # allow long exception message
]

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
length-sort = true

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.validator",
    "pydantic.root_validator",
    "pydantic.field_validator",
    "pydantic.model_validator",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
